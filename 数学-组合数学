const int N = 5007;
int n,m,mod;
int c[N][N],s[N][N],jc[N];
void Init() {
	jc[0] = 1;
	for(int i=1;i<N;++i) {
		jc[i] = jc[i-1]*i % mod;
	}
	// ( n )
	// ( k )
	// 组合数 n 选 k 
	c[0][0] = 1;
	for(int i=1;i<N;++i){
		c[i][0] = c[i][i] = 1;
		for(int j=1;j<i;++j)
			c[i][j] = (c[i-1][j] + c[i-1][j-1]) % mod;
	}
	// { n }
	// { k }
	// 第二类斯特林数 n 放 k
	//  n个不同的小球 放入 k 个无序的集合中 
	s[0][0] = 1;
	for(int i=1;i<N;++i) {
		for(int j=1;j<=i;++j) {
			s[i][j] = (s[i-1][j-1] + s[i-1][j] * j %mod) % mod;
		}
	}
}

//O(n) 预处理, O(1) 组合数
void Init() {
    jc[0] = 1;
    for(int i=1;i<N;++i) jc[i] = jc[i-1]*i % mod;
    ijc[N-1] = Inv(jc[N-1]);
    for(int i=N-2;i>=0;--i) ijc[i] = ijc[i+1]*(i+1) % mod;
}
int C(int x,int y) {
    if(x < y) return 0;
    return jc[x]*ijc[y]%mod*ijc[x-y]%mod;
}
